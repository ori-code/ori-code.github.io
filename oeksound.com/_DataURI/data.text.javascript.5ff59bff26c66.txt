data:text/javascript;base64,Y2xhc3MgQXVkaW9MYWJNaXhlciBleHRlbmRzIEF1ZGlvV29ya2xldFByb2Nlc3NvciB7CiAgbGV2ZWxzID0gWzAsIDAsIDBdOwogIGluY3JlbWVudHMgPSBbMCwgMCwgMF07CgogIGlzUGxheWluZyA9IGZhbHNlOwogIHBsYXloZWFkID0gMDsKICBidWZmZXJzID0gW107CiAgbnVtU2FtcGxlcyA9IDA7CgogIG91dHB1dExldmVsID0gMDsKICBvdXRwdXRMZXZlbEluY3JlbWVudCA9IDA7CgogIHN0YXJ0UG9zaXRpb24gPSAwOwoKICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7CiAgICBzdXBlcihvcHRpb25zKTsKCiAgICB0aGlzLnBvcnQub25tZXNzYWdlID0gZXZlbnQgPT4gewogICAgICBzd2l0Y2ggKGV2ZW50LmRhdGEudHlwZSkgewogICAgICAgIGNhc2UgJ3NldF9idWZmZXJzJzogewogICAgICAgICAgdGhpcy5idWZmZXJzID0gZXZlbnQuZGF0YS5idWZmZXJzOwogICAgICAgICAgdGhpcy5udW1TYW1wbGVzID0gTWF0aC5taW4oLi4udGhpcy5idWZmZXJzLm1hcChiID0+IGJbMF0ubGVuZ3RoKSk7CiAgICAgICAgICBmb3IgKGNvbnN0IGIgb2YgdGhpcy5idWZmZXJzKSB7CiAgICAgICAgICAgIGJbMF0gPSBiWzBdLnNsaWNlKDAsIHRoaXMubnVtU2FtcGxlcyk7CiAgICAgICAgICAgIGJbMV0gPSBiWzFdLnNsaWNlKDAsIHRoaXMubnVtU2FtcGxlcyk7CiAgICAgICAgICB9CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgY2FzZSAnc2V0X2xldmVscyc6IHsKICAgICAgICAgIHRoaXMuaW5jcmVtZW50cyA9IGV2ZW50LmRhdGEubGV2ZWxzLm1hcCgobCwgaSkgPT4gdGhpcy5nZXRGYWRlSW5jcmVtZW50KGwgLSB0aGlzLmxldmVsc1tpXSwgMC4wMikpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIGNhc2UgJ3NldF9wb3NpdGlvbic6IHsKICAgICAgICAgIHRoaXMucGxheWhlYWQgPSBNYXRoLmZsb29yKGV2ZW50LmRhdGEucG9zaXRpb24gKiBzYW1wbGVSYXRlKTsKICAgICAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZSh7IHBsYXloZWFkOiB0aGlzLnBsYXloZWFkIH0pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIGNhc2UgJ3BsYXknOiB7CiAgICAgICAgICB0aGlzLnN0YXJ0UG9zaXRpb24gPSBldmVudC5kYXRhLnBvc2l0aW9uICogc2FtcGxlUmF0ZTsKICAgICAgICAgIHRoaXMucGxheWhlYWQgPSBNYXRoLmZsb29yKHRoaXMuc3RhcnRQb3NpdGlvbik7CiAgICAgICAgICB0aGlzLm91dHB1dExldmVsSW5jcmVtZW50ID0gdGhpcy5nZXRGYWRlSW5jcmVtZW50KDEgLSB0aGlzLm91dHB1dExldmVsLCAwLjAyKTsKICAgICAgICAgIHRoaXMuaXNQbGF5aW5nID0gdHJ1ZTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBjYXNlICdwYXVzZSc6IHsKICAgICAgICAgIHRoaXMub3V0cHV0TGV2ZWxJbmNyZW1lbnQgPSB0aGlzLmdldEZhZGVJbmNyZW1lbnQoMCAtIHRoaXMub3V0cHV0TGV2ZWwsIDAuMDIpOwogICAgICAgICAgdGhpcy5pc1BsYXlpbmcgPSBmYWxzZTsKICAgICAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZSh7IHBsYXloZWFkOiB0aGlzLnN0YXJ0UG9zaXRpb24gfSk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfQoKICBnZXRGYWRlSW5jcmVtZW50KGRlbHRhLCB0aW1lSW5TZWNvbmRzKSB7CiAgICByZXR1cm4gZGVsdGEgLyAodGltZUluU2Vjb25kcyAqIHNhbXBsZVJhdGUpOwogIH0KCiAgcHJvY2VzcyhpbnB1dHMsIG91dHB1dHMpIHsKICAgIGlmICghdGhpcy5idWZmZXJzLmxlbmd0aCkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIGNvbnN0IGJsb2NrU2l6ZSA9IG91dHB1dHNbMF1bMF0ubGVuZ3RoOwogICAgZm9yIChsZXQgcyA9IDA7IHMgPCBibG9ja1NpemU7IHMrKykgewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYnVmZmVycy5sZW5ndGg7IGkrKykgewogICAgICAgIGZvciAobGV0IGNoID0gMDsgY2ggPCAyOyBjaCsrKSB7CiAgICAgICAgICBjb25zdCBzYW1wbGVQb3NpdGlvbiA9IHRoaXMucGxheWhlYWQgKyBzOwogICAgICAgICAgaWYgKHNhbXBsZVBvc2l0aW9uIDwgdGhpcy5udW1TYW1wbGVzKSB7CiAgICAgICAgICAgIG91dHB1dHNbMF1bY2hdW3NdICs9IHRoaXMub3V0cHV0TGV2ZWwgKiB0aGlzLmxldmVsc1tpXSAqIHRoaXMuYnVmZmVyc1tpXVtjaF1bc2FtcGxlUG9zaXRpb25dOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICB0aGlzLmxldmVsc1tpXSA9IE1hdGgubWluKE1hdGgubWF4KDAsIHRoaXMubGV2ZWxzW2ldICsgdGhpcy5pbmNyZW1lbnRzW2ldKSwgMSk7CiAgICAgIH0KICAgICAgdGhpcy5vdXRwdXRMZXZlbCA9IE1hdGgubWluKE1hdGgubWF4KDAsIHRoaXMub3V0cHV0TGV2ZWwgKyB0aGlzLm91dHB1dExldmVsSW5jcmVtZW50KSwgMSk7CiAgICB9CiAgICB0aGlzLnBsYXloZWFkICs9IGJsb2NrU2l6ZTsKICAgIGlmICh0aGlzLmlzUGxheWluZykgewogICAgICB0aGlzLnBvcnQucG9zdE1lc3NhZ2UoeyBwbGF5aGVhZDogdGhpcy5wbGF5aGVhZCB9KTsKICAgIH0KICAgIHJldHVybiB0cnVlOwogIH0KfQoKcmVnaXN0ZXJQcm9jZXNzb3IoJ2F1ZGlvLWxhYi1taXhlcicsIEF1ZGlvTGFiTWl4ZXIpOwo=